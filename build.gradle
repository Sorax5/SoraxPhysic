plugins {
    id 'java'
    id "com.gradleup.shadow" version "8.3.1"
}

group = getProperty("groupId")
version = getProperty("version")

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://maven.enginehub.org/repo/" }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
    compileOnly("com.sk89q.worldedit:worldedit-bukkit:7.4.0-SNAPSHOT")

    implementation "dev.jorel:commandapi-bukkit-shade:9.5.0"
    implementation "com.saicone.rtag:rtag:1.5.6"
    implementation "com.saicone.rtag:rtag-block:1.5.6"
    implementation("de.fabmax:physx-jni:2.4.2")

    runtimeOnly("de.fabmax:physx-jni:2.4.2:natives-windows")
    runtimeOnly("de.fabmax:physx-jni:2.4.2:natives-linux")
    runtimeOnly("de.fabmax:physx-jni:2.4.2:natives-macos")
    runtimeOnly("de.fabmax:physx-jni:2.4.2:natives-macos-arm64")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate("dev.jorel.commandapi", "fr.phylisiumstudio.commandapi")
    relocate "com.saicone.rtag", project.group + ".libs.rtag"
    minimize()
}

build.dependsOn shadowJar
